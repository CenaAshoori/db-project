# Generated by Django 3.2.5 on 2022-05-23 18:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('dep_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'department',
            },
        ),
        migrations.CreateModel(
            name='FlashcardCategory',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'flashcard_category',
            },
        ),
        migrations.CreateModel(
            name='Professors',
            fields=[
                ('prof_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=20)),
                ('password', models.CharField(max_length=128)),
                ('department', models.ForeignKey(blank=True, db_column='department', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='all.department')),
            ],
            options={
                'db_table': 'professors',
            },
        ),
        migrations.CreateModel(
            name='QuizzesSubject',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'quizzes_subject',
            },
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('stu_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=20)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('balance', models.FloatField()),
            ],
            options={
                'db_table': 'students',
            },
        ),
        migrations.CreateModel(
            name='Quizzes',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('price', models.FloatField(blank=True, null=True)),
                ('began_at', models.DateField(blank=True, null=True)),
                ('end_at', models.DateField(blank=True, null=True)),
                ('prof', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='all.professors')),
                ('quiz_subject', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='all.quizzessubject')),
            ],
            options={
                'db_table': 'quizzes',
            },
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=256)),
                ('wrong_answers_1', models.CharField(blank=True, max_length=256, null=True)),
                ('correct_answer', models.CharField(blank=True, max_length=256, null=True)),
                ('wrong_answers_2', models.CharField(blank=True, max_length=256, null=True)),
                ('wrong_answers_3', models.CharField(blank=True, max_length=256, null=True)),
                ('quiz', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='all.quizzes')),
            ],
            options={
                'db_table': 'questions',
            },
        ),
        migrations.CreateModel(
            name='Flashcard',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('is_question_md', models.BooleanField(blank=True, null=True)),
                ('is_answer_md', models.BooleanField(blank=True, null=True)),
                ('hint', models.TextField(blank=True, null=True)),
                ('categoryid', models.ForeignKey(db_column='categoryID', on_delete=django.db.models.deletion.DO_NOTHING, to='all.flashcardcategory')),
            ],
            options={
                'db_table': 'flashcard',
            },
        ),
        migrations.CreateModel(
            name='Enroll',
            fields=[
                ('order_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='all.quizzes')),
                ('stu', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='all.students')),
            ],
            options={
                'db_table': 'enroll',
                'unique_together': {('quiz', 'stu')},
            },
        ),
        migrations.CreateModel(
            name='StudentCategory',
            fields=[
                ('stu', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='all.students')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='all.flashcardcategory')),
            ],
            options={
                'db_table': 'student_category',
                'unique_together': {('stu', 'category'), ('category', 'stu')},
            },
        ),
        migrations.CreateModel(
            name='Participated',
            fields=[
                ('stu', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='all.students')),
                ('mark', models.FloatField(blank=True, null=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='all.quizzes')),
            ],
            options={
                'db_table': 'participated',
                'unique_together': {('stu_id', 'quiz_id')},
            },
        ),
    ]
